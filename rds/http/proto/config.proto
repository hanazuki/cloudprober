// Configuration proto for HTTP provider.
//
// Example config:
// probe {
//   targets{
//     http_targets {
//       url: "http://example.com/targets.json"
//       format: JSON
//     }
//   }
// }
syntax = "proto2";

package cloudprober.rds.http;

import "github.com/cloudprober/cloudprober/rds/proto/rds.proto";
import "github.com/cloudprober/cloudprober/common/tlsconfig/proto/config.proto";

option go_package = "github.com/cloudprober/cloudprober/rds/http/proto";

// HTTP provider config.
message ProviderConfig {
  // HTTP URL to remote file that contains resources in either textproto or json format.
  // Example in textproto format:
  //
  // resource {
  //   name: "switch-xx-01"
  //   ip: "10.11.112.3"
  //   port: 8080
  //   labels {
  //     key: "device_type"
  //     value: "switch"
  //   }
  // }
  // resource {
  //   name: "switch-yy-01"
  //   ip: "10.16.110.12"
  //   port: 8080
  // }
  repeated string url = 1;

  enum Format {
    // UNSPECIFIED = 0;  // Determine format by content negotiation -- Not yet implemented
    TEXTPB = 1;       // Text proto format (application/x-textpb).
    JSON = 2;         // JSON proto format (application/json).
  }
  required Format format = 2;  // Expected response format -- Required for now

  // TLS config to authenticate communication with the remote server.
  optional tlsconfig.TLSConfig tls_config = 3;

	optional int32 timeout_sec = 4;

  // How often resources should be evaluated/expanded.
  optional int32 re_eval_sec = 99 [default = 300];  // default 5 min
}

message HttpResources {
  repeated .cloudprober.rds.Resource resource = 1;
}
